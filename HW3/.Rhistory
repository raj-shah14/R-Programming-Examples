vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
#prob 1
library(readr)
my_two_test<-function(succ,n,type="z"){
su1<-succ[1]
su2<-succ[2]
p_hat<-sum(succ)/sum(n)
n1<-n[1]
n2<-n[2]
p1_hat<-su1/n1
p2_hat<-su2/n2
ts<-(p1_hat-p2_hat)/sqrt(p_hat*(1-p_hat)*((1/n1)+(1/n2)))
p_val<-2*(1-pnorm(abs(ts)))
if(type == "z"){
result<-matrix(c(ts,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
#print(result)
print(p_val)
}
if(type == "chi"){
result<-matrix(c(ts^2,type,p_val,p1_hat,p2_hat),ncol=5)
colnames(result)<-c("TS","Type","P-Value","Sample Estimate","Sample Estimate")
result<-as.table(result)
print(result)
}
}
#my_two_test(succ = c(23,25),n = c(40,50))
p.set.1<-c(0.80,0.28)
p.set.2<-c(0.47,0.54)
p.set.3<-c(0.25,0.25)
for (n in c(10^2,10^4,10^6)){
b1<-rbinom(1,n,p.set.1[1])
b2<-rbinom(1,n,p.set.1[2])
vec_set1<-c(b1,b2)
my_two_test(vec_set1,c(n,n))
b3<-rbinom(1,n,p.set.2[1])
b4<-rbinom(1,n,p.set.2[2])
vec_set2<-c(b3,b4)
my_two_test(vec_set2,c(n,n))
b5<-rbinom(1,n,p.set.3[1])
b6<-rbinom(1,n,p.set.3[2])
vec_set3<-c(b5,b6)
my_two_test(vec_set3,c(n,n))
}
prop.test(matrix(c(23,18,7,13),2),correct = FALSE)
fisher.test(matrix(c(23,18,7,13),2))
library(readr)
library(datasets)
data(infert)
attach(infert)
pairs(infert, gap=0, cex.labels=0.9)
pairs(infert, gap=0, cex.labels=0.9)
inf.lm<-lm(pooled.stratum~age+case+education+induced+parity+spontaneous+stratum,data=infert)
summary(inf.lm)
inf.lm<-lm(pooled.stratum~age+case+education+induced+parity+spontaneous+stratum,data=infert)
summary(inf.lm)
inf.lm<-lm(education~age+case+pooled.stratum+induced+parity+spontaneous+stratum,data=infert)
summary(inf.lm)
inf.lm<-lm(pooled.stratum~age+case+education+induced+parity+spontaneous+stratum,data=infert)
summary(inf.lm)
library(Ecdat)
data(Mathlevel)
attach(Mathlevel)
pairs(Mathlevel, gap=0, cex.labels=0.9)
math.lm<-lm(mathlevel~sat+language+sex+major+mathcourse+physiccourse+chemistcourse)
summary(math.lm)
rm(list = ls())
library(readr)
library(datasets)
data(infert)
attach(infert)
pairs(infert, gap=0, cex.labels=0.9)
inf.lm<-lm(pooled.stratum~age+case+education+induced+parity+spontaneous+stratum,data=infert)
summary(inf.lm)
step(inf.lm)
library(Ecdat)
data(PSID)
attach(PSID)
pairs(PSID, gap=0, cex.labels=0.9)
psid.lm<-lm(educatn~intnum+persnum+age+earnings+hours+kids+married)
summary(psid.lm)
step(psid.lm)
library(readr)
library(datasets)
data(infert)
attach(infert)
pairs(infert, gap=0, cex.labels=0.9)
inf.lm<-lm(pooled.stratum~age+case+education+induced+parity+spontaneous+stratum,data=infert)
summary(inf.lm)
step(inf.lm)
inf.lm<-lm(induced~age+case+education+parity+spontaneous+pooled.stratum+stratum,data=infert)
summary(inf.lm)
inf.lm<-lm(induced~age+case+education+parity+pooled.stratum+stratum,data=infert)
summary(inf.lm)
inf.lm<-lm(spontaneous~age+case+education+parity+pooled.stratum+stratum,data=infert)
summary(inf.lm)
library(readr)
library(datasets)
data(mtcars)
data(infert)
attach(infert)
pairs(infert, gap=0, cex.labels=0.9)
attach(mtcars)
pairs(infert, gap=0, cex.labels=0.9)
attach(mtcars)
pairs(mtcars, gap=0, cex.labels=0.9)
View(mtcars)
cars.lm<-(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,data=mtcars)
cars.lm<-lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,data=mtcars)
summary(cars.lm)
step(cars.lm)
pairs(mtcars, gap=0, cex.labels=0.9)
rm(list = ls())
library(readr)
library(datasets)
data(mtcars)
attach(mtcars)
pairs(mtcars, gap=0, cex.labels=0.9)
cars.lm<-lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,data=mtcars)
summary(cars.lm)
step(cars.lm)
library(readr)
library(datasets)
data(mtcars)
attach(mtcars)
pairs(mtcars, gap=0, cex.labels=0.9)
cars.lm<-lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,data=mtcars)
summary(cars.lm)
step(cars.lm)
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt,data=mtcars))
summary(lm(mpg~cyl+disp+hp+wt,data=mtcars))
summary(lm(mpg~cyl+hp+wt,data=mtcars))
summary(lm(mpg~cyl+wt,data=mtcars))
summary(lm(mpg~wt,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec+vs,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt+qsec,data=mtcars))
summary(lm(mpg~cyl+disp+hp+drat+wt,data=mtcars))
summary(lm(mpg~cyl+disp+hp+wt,data=mtcars))
summary(lm(mpg~cyl+hp+wt,data=mtcars))
summary(lm(mpg~cyl+wt,data=mtcars))
summary(lm(mpg~wt,data=mtcars))
